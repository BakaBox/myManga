<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:myManga_App.Converters"
    xmlns:button="clr-namespace:myManga_App.Resources.Theme.Buttons"
    xmlns:objects="clr-namespace:myMangaSiteExtension.Objects;assembly=myMangaSiteExtension"
    xmlns:utils="clr-namespace:myMangaSiteExtension.Utilities;assembly=myMangaSiteExtension">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/myManga;component/Themes/CoreResourceDictionary.xaml"/>
        <ResourceDictionary>
            <ObjectDataProvider ObjectType="{x:Type utils:MangaObjectExtensions}" MethodName="IsLocal" x:Key="IsLocalContent">
                <ObjectDataProvider.MethodParameters>
                    <objects:MangaObject></objects:MangaObject>
                    <system:String>C:\</system:String>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <converters:LoadImageFromMangaArchive x:Key="LoadImageFromMangaArchive"/>
    <converters:LoadImageFromChapterArchive x:Key="LoadImageFromChapterArchive"/>

    <converters:StringListToCSV x:Key="StringListToCSV"/>
    <converters:LocationListToCSV x:Key="LocationListToCSV"/>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderBrush" Value="{DynamicResource window-theme-primary}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Foreground" Value="{DynamicResource window-foreground}"/>
        <Setter Property="Background" Value="{DynamicResource window-background}"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ItemBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid>
                            <ContentPresenter
                                x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid x:Name="TRCornerTick" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Rectangle Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                <Rectangle Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Grid.Row="1" Grid.Column="1"/>
                                <Rectangle 
                                Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" 
                                Grid.RowSpan="2" 
                                Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
                                            <GradientStop Color="{DynamicResource window-theme-primary-color}" Offset="0.5"/>
                                            <GradientStop Offset="0.5"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock
                                    Text="{DynamicResource fa-icon-ok}"
                                    FontFamily="{DynamicResource FontAwesome}" 
                                    FontSize="14" 
                                    Foreground="{DynamicResource window-background}" 
                                    Grid.Column="1"
                                    Margin="-1,0,0,-1"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                            <Setter TargetName="ItemBorder" Property="Padding" Value="0"/>
                            <Setter TargetName="TRCornerTick" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource window-theme-primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" x:Key="HomeMangaListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ItemBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.TextAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Image
                                Grid.Column="0" 
                                Grid.RowSpan="4" 
                                Margin="6,2" 
                                Width="48" 
                                Height="72"
                                Source="{Binding Converter={StaticResource LoadImageFromMangaArchive}}"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" Foreground="{StaticResource text-dark}" FontWeight="Bold" FontSize="14" TextTrimming="CharacterEllipsis" Text="{Binding Name, FallbackValue=No-Name}"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Foreground="{StaticResource text-muted}" TextTrimming="CharacterEllipsis" Text="{Binding Locations, Converter={StaticResource LocationListToCSV}, Mode=OneWay, FallbackValue=No-Location}"/>
                            <TextBlock Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" Foreground="{StaticResource text-muted}" TextTrimming="CharacterEllipsis" Text="{Binding DatabaseLocations, Converter={StaticResource LocationListToCSV}, Mode=OneWay, FallbackValue=No-Database}"/>
                            <TextBlock Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" Foreground="{StaticResource text-muted}" TextTrimming="CharacterEllipsis" Text="{Binding Genres, Converter={StaticResource StringListToCSV}, Mode=OneWay, FallbackValue=No-Genre}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                            <Setter TargetName="ItemBorder" Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource window-theme-primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" x:Key="HomeView_ChapterListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ItemBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.TextAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" Foreground="{StaticResource text-dark}" FontWeight="Bold" FontSize="14" TextTrimming="CharacterEllipsis" Text="{Binding Name}"/>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center" Foreground="{StaticResource text-muted}" TextTrimming="CharacterEllipsis" Text="{Binding VCsCString}"/>
                            <!--<TextBlock
                                x:Name="LocationIcon"
                                Grid.Row="0"
                                Grid.Column="1"
                                FontFamily="{DynamicResource FontAwesome}"
                                Text="{StaticResource fa-cloud}"
                                TextAlignment="Center"
                                VerticalAlignment="Center"/>-->
                            <button:MetroButton
                                x:Name="ReadChapterButton"
                                Grid.Row="0"
                                Grid.Column="1"
                                FontFamily="{DynamicResource OpenIconic}"
                                Content="{StaticResource oi-book}"
                                Command="{Binding Path=DataContext.ReadChapterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                CommandParameter="{Binding}"/>
                            <button:MetroButton
                                x:Name="DownloadButton"
                                Grid.Row="1"
                                Grid.Column="1"
                                FontFamily="{DynamicResource FontAwesome}"
                                Content="{StaticResource fa-download}"
                                Command="{Binding Path=DataContext.DownloadChapterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                CommandParameter="{Binding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                            <Setter TargetName="ItemBorder" Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DownloadButton" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource window-theme-primary}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Read}" Value="True">

                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLocalContent}" Value="True">
                            <!--<Setter TargetName="LocationIcon" Property="Text" Value="{StaticResource fa-hdd-o}"/>-->
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" x:Key="SearchView_ChapterListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ItemBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.TextAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" Foreground="{StaticResource text-dark}" FontWeight="Bold" FontSize="14" TextTrimming="CharacterEllipsis" Text="{Binding Name}"/>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center" Foreground="{StaticResource text-muted}" TextTrimming="CharacterEllipsis" Text="{Binding VCsCString}"/>
                            <TextBlock
                                x:Name="LocationIcon"
                                Grid.Row="0"
                                Grid.Column="1"
                                FontFamily="{DynamicResource FontAwesome}"
                                Text="{StaticResource fa-cloud}"
                                TextAlignment="Center"
                                VerticalAlignment="Center"/>
                            <button:MetroButton
                                x:Name="DownloadButton"
                                Grid.Row="1"
                                Grid.Column="1"
                                FontFamily="{DynamicResource FontAwesome}"
                                Content="{StaticResource fa-download}"
                                Command="{Binding Path=DataContext.DownloadChapterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                CommandParameter="{Binding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                            <Setter TargetName="ItemBorder" Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DownloadButton" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource window-theme-primary}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Read}" Value="True">

                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLocalContent}" Value="True">
                            <Setter TargetName="LocationIcon" Property="Text" Value="{StaticResource fa-hdd-o}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" x:Key="ReaderView_PageListBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource window-theme-primary-disabled}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ItemBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.TextAlignment="Left">
                            <Image MaxHeight="200" MaxWidth="200" 
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource LoadImageFromChapterArchive}">
                                        <Binding Path="DataContext.MangaObject">
                                            <Binding.RelativeSource>
                                                <RelativeSource Mode="FindAncestor" AncestorType="UserControl"/>
                                            </Binding.RelativeSource>
                                        </Binding>
                                        <Binding Path="DataContext.ChapterObject">
                                            <Binding.RelativeSource>
                                                <RelativeSource Mode="FindAncestor" AncestorType="UserControl"/>
                                            </Binding.RelativeSource>
                                        </Binding>
                                        <Binding/>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <TextBlock 
                                VerticalAlignment="Bottom" 
                                Text="{Binding PageNumber}" 
                                FontSize="20"
                                Padding="3"
                                TextAlignment="Center" 
                                Background="#BF000000"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                            <Setter TargetName="ItemBorder" Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource window-theme-primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>