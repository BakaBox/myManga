<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:button="clr-namespace:myManga_App.Resources.Theme.Buttons">

    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Chrome"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{DynamicResource window-background}"
                        SnapsToDevicePixels="True">
                        <Border.Resources>
                            <Duration x:Key="ColorDurationNormal">0:0:0.5</Duration>
                            <Duration x:Key="ColorDurationFast">0:0:0.1</Duration>
                        </Border.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-background-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-foreground-color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-theme-secondary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-secondary-color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-background-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-foreground-disabled-color}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-theme-secondary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}" AutoReverse="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            x:Name="Content"
                            TextBlock.Foreground="{DynamicResource window-foreground}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Foreground" Value="{DynamicResource window-foreground}"/>
        <Setter Property="Background" Value="{DynamicResource window-background}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="Padding" Value="8,4"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WithIcon">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Chrome"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{DynamicResource window-background}"
                        SnapsToDevicePixels="True">
                        <Border.Resources>
                            <Duration x:Key="ColorDurationNormal">0:0:0.5</Duration>
                            <Duration x:Key="ColorDurationFast">0:0:0.1</Duration>
                        </Border.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-background-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-foreground-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-foreground-color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-theme-secondary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-secondary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-secondary-color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-background-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-foreground-disabled-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationNormal}" Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-foreground-disabled-color}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{DynamicResource window-theme-secondary-color}"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}" AutoReverse="True"/>
                                        <ColorAnimation Duration="{StaticResource ColorDurationFast}" Storyboard.TargetName="Icon" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="{DynamicResource window-theme-primary-color}" AutoReverse="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel
                            Orientation="Horizontal"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextBlock
                                x:Name="Icon"
                                Margin="2,0"
                                TextBlock.Foreground="{DynamicResource window-foreground}"
                                Text="{TemplateBinding Tag}"
                                FontFamily="{DynamicResource FontAwesome}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter
                                x:Name="Content"
                                TextBlock.Foreground="{DynamicResource window-foreground}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Foreground" Value="{DynamicResource window-foreground}"/>
        <Setter Property="Background" Value="{DynamicResource window-background}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="Padding" Value="8,4"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type button:MetroButton}">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource window-foreground}"/>
        <Setter Property="Background" Value="{DynamicResource window-background}"/>
        <Setter Property="PrimaryBrush" Value="{DynamicResource window-theme-primary}"/>
        <Setter Property="SecondaryBrush" Value="{DynamicResource window-theme-secondary}"/>
        <Setter Property="PrimaryDisabledBrush" Value="{DynamicResource window-theme-primary-disabled}"/>
        <Setter Property="SecondaryDisabledBrush" Value="{DynamicResource window-theme-secondary-disabled}"/>

        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type button:MetroButton}">
                    <Border
                        x:Name="Chrome"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="Content"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=SecondaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding Path=PrimaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=PrimaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding Path=SecondaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=PrimaryDisabledBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding Path=SecondaryDisabledBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type button:MetroButton}" BasedOn="{StaticResource {x:Type button:MetroButton}}" x:Key="MetroButtonWithIcon">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type button:MetroButton}">
                    <Border
                        x:Name="Chrome"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}">
                        <StackPanel
                            Orientation="Horizontal"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextBlock
                                x:Name="Icon"
                                Margin="0,0,4,0"
                                Text="{TemplateBinding Tag}"
                                FontFamily="{DynamicResource FontAwesome}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter
                                x:Name="Content"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=SecondaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{Binding Path=PrimaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding Path=PrimaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=PrimaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{Binding Path=SecondaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding Path=SecondaryBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=PrimaryDisabledBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{Binding Path=SecondaryDisabledBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding Path=SecondaryDisabledBrush, RelativeSource={RelativeSource AncestorType={x:Type button:MetroButton}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>