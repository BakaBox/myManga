<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:myManga_App.Views.Objects.Extensions"
    xmlns:Controls="clr-namespace:System.Windows.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/myManga;component/Themes/CoreResourceDictionary.xaml"/>
        <ResourceDictionary Source="/myManga;component/Themes/ListBox/ListBoxItems.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" x:Key="ExtensionObjectListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ItemBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <Grid
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextBlock.TextAlignment="Left">
                            <StackPanel Orientation="Horizontal">
                                <Controls:MetroToggleButton 
                                    x:Name="EnabledButton"
                                    Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                    Content="{DynamicResource oi-x}"
                                    FontFamily="{StaticResource OpenIconic}"
                                    IsChecked="{Binding Enabled}"/>
                                <TextBlock x:Name="Name" Text="{Binding Name}" FontSize="16" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            </StackPanel>
                            <TextBlock 
                                x:Name="Grip"
                                Text="{StaticResource oi-menu}" 
                                FontFamily="{StaticResource OpenIconic}"
                                FontSize="16" 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Enabled}" Value="True">
                            <Setter TargetName="Name" Property="TextBlock.FontWeight" Value="Bold"/>
                            <Setter TargetName="EnabledButton" Property="Content" Value="{DynamicResource oi-check}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Enabled}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource text-muted}"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                            <Setter TargetName="ItemBorder" Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="EnabledButton" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="Background" Value="{DynamicResource window-theme-secondary}"/>
                            <Setter TargetName="ItemBorder" Property="TextElement.Foreground" Value="{DynamicResource window-theme-primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ExtensionObjectTemplate">
        <Border
            x:Name="ItemBorder"
            BorderBrush="{DynamicResource window-theme-primary}"
            BorderThickness="3"
            Background="{DynamicResource window-background}"
            TextElement.Foreground="{DynamicResource window-foreground}">
            <Grid
                x:Name="Content"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextBlock.TextAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <Controls:MetroToggleButton 
                        x:Name="EnabledButton"
                        Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Content="{DynamicResource oi-x}"
                        FontFamily="{DynamicResource OpenIconic}"
                        IsChecked="{Binding Enabled, Mode=OneWay}"
                        IsEnabled="False"/>
                    <TextBlock x:Name="Name" Text="{Binding Name}" FontSize="16" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Enabled}" Value="True">
                <Setter TargetName="Name" Property="TextBlock.FontWeight" Value="Bold"/>
                <Setter TargetName="EnabledButton" Property="Content" Value="{DynamicResource oi-check}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Enabled}" Value="False">
                <Setter TargetName="Content" Property="TextBlock.Foreground" Value="{DynamicResource text-muted}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>