<Windows:ThemedWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:p="http://schemas.microsoft.com/netfx/2007/xaml/presentation"
    xmlns:ViewModels="clr-namespace:myManga_App.ViewModels"
    xmlns:MVVM="clr-namespace:myManga_App.Objects.MVVM"
    xmlns:AssemblyInformation="clr-namespace:myManga_App.Objects.About"
    xmlns:App="clr-namespace:myManga_App"
    xmlns:Converters="clr-namespace:myManga_App.Converters" 
    xmlns:Controls="clr-namespace:System.Windows.Controls"
    xmlns:Windows="clr-namespace:System.Windows"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    x:Class="myManga_App.MainWindow"
    Title="{DynamicResource AppTitle}"
    WindowState="{Binding Path=COREProperty.UserConfiguration.WindowState, Mode=TwoWay, Source={x:Static Application.Current}, UpdateSourceTrigger=PropertyChanged}"
    Width="{Binding Path=COREProperty.UserConfiguration.WindowSizeWidth, FallbackValue=720, Mode=TwoWay, Source={x:Static Application.Current}, UpdateSourceTrigger=PropertyChanged}"
    Height="{Binding Path=COREProperty.UserConfiguration.WindowSizeHeight, FallbackValue=720, Mode=TwoWay, Source={x:Static Application.Current}, UpdateSourceTrigger=PropertyChanged}"
    x:Name="myMangaMainWindow"
    MinWidth="720"
    MinHeight="720"
    Padding="5"
    Icon="/myManga;component/Resources/Icon.ico"
    SnapsToDevicePixels="True"
    Style="{StaticResource ThemedWindowStyle}">
    <Windows:ThemedWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/myManga;component/Themes/System/Windows/ThemedWindow.xaml"/>
                <ResourceDictionary Source="/myManga;component/Resources/ViewModel-View-Link.xaml"/>

                <ResourceDictionary Source="/myManga;component/Themes/ProgressBar/ProgressBar.xaml"/>
                <ResourceDictionary Source="/myManga;component/Themes/ProgressBar/Spinner.xaml"/>

                <ResourceDictionary Source="/myManga;component/Resources/Images/OpenIconic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Converters:ConditionalValueConverter 
                x:Key="ConditionalValueConverter" 
                Reference="True" 
                ValueType="System.Windows.Shell.TaskbarItemProgressState, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                TrueValue="Indeterminate"
                FalseValue="None"/>
            <Converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <System:Double x:Key="MenuButtonSize">39</System:Double>
        </ResourceDictionary>
    </Windows:ThemedWindow.Resources>
    <Windows:ThemedWindow.DataContext>
        <ViewModels:MainViewModel/>
    </Windows:ThemedWindow.DataContext>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo
            ProgressState="{Binding DownloadsActive, Converter={StaticResource ConditionalValueConverter}}"/>
    </Window.TaskbarItemInfo>

    <Grid x:Name="grid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <ProgressBar
            Grid.ColumnSpan="2"
            Margin="304,-23,304,0"
            IsIndeterminate="{Binding DownloadsActive}"
            Style="{DynamicResource PerformanceProgressBar}" 
            VerticalAlignment="Top"
            IsHitTestVisible="False"/>

        <Grid
            x:Name="Menu"
            Grid.Column="0"
            Grid.RowSpan="2"
            TextBlock.FontSize="18"
            TextElement.FontWeight="Bold">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel 
                x:Name="UpperMenuItems"
                Orientation="Vertical"
                Grid.Row="0">

                <Rectangle Height="1" Fill="{DynamicResource window-theme-primary}"/>

                <Controls:MetroToggleButton
                    x:Name="MenuButton"
                    HorizontalContentAlignment="Left"
                    Height="{StaticResource MenuButtonSize}"
                    IsChecked="False">
                    <StackPanel 
                        Orientation="Horizontal"
                        TextElement.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}">
                        <Viewbox
                            x:Name="MenuHeaderIcon">
                            <Path Margin="2"
                                  Data="{StaticResource iconic-geometry-menu}" 
                                  Fill="{Binding Path=Foreground, ElementName=MenuButton, FallbackValue=Red}"/>
                        </Viewbox>
                        <TextBlock
                            x:Name="MenuHeaderLabel"
                            Text="Menu"
                            Padding="5"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=MenuButton}"/>
                    </StackPanel>
                </Controls:MetroToggleButton>

                <Rectangle Height="1" Fill="{DynamicResource window-theme-primary}"/>

                <Controls:MetroButton
                    x:Name="HomeButton"
                    HorizontalContentAlignment="Left"
				    Command="{Binding NavigatePagesCommand}"
                    CommandParameter="{Binding PagesHomeViewModel}"
                    Height="{StaticResource MenuButtonSize}">
                    <StackPanel 
                        Orientation="Horizontal"
                        TextElement.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}">
                        <Viewbox
                            x:Name="HomeHeaderIcon">
                            <Path Margin="2" 
                                  Data="{StaticResource iconic-geometry-home}" 
                                  Fill="{Binding Path=Foreground, ElementName=HomeButton, FallbackValue=Red}"/>
                        </Viewbox>
                        <TextBlock
                            x:Name="HomeHeaderLabel"
                            Text="Home"
                            Padding="5"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=MenuButton}"/>
                    </StackPanel>
                </Controls:MetroButton>

                <Controls:MetroButton
                    x:Name="SearchButton"
                    HorizontalContentAlignment="Left"
				    Command="{Binding NavigatePagesCommand}"
                    CommandParameter="{Binding PagesSearchViewModel}"
                    Height="{StaticResource MenuButtonSize}">
                    <StackPanel 
                        Orientation="Horizontal"
                        TextElement.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}">
                        <Viewbox
                            x:Name="SearchHeaderIcon">
                            <Path Margin="2" 
                                  Data="{StaticResource iconic-geometry-magnifying-glass}"
                                  Fill="{Binding Path=Foreground, ElementName=SearchButton, FallbackValue=Red}"/>
                        </Viewbox>
                        <TextBlock
                            x:Name="SearchHeaderLabel"
                            Text="Search"
                            Padding="5"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=MenuButton}"/>
                    </StackPanel>
                </Controls:MetroButton>

                <Controls:MetroButton
                    x:Name="ReadButton"
                    HorizontalContentAlignment="Left"
				    Command="{Binding NavigatePagesCommand}"
                    CommandParameter="{Binding PagesChapterReaderViewModel}"
                    Height="{StaticResource MenuButtonSize}">
                    <StackPanel 
                        Orientation="Horizontal"
                        TextElement.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}">
                        <Viewbox
                            x:Name="ReadHeaderIcon">
                            <Path Margin="2" 
                                  Data="{StaticResource iconic-geometry-book}"
                                  Fill="{Binding Path=Foreground, ElementName=ReadButton, FallbackValue=Red}"/>
                        </Viewbox>
                        <TextBlock
                            x:Name="ReadHeaderLabel"
                            Text="Reader"
                            Padding="5"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=MenuButton}"/>
                    </StackPanel>
                </Controls:MetroButton>

            </StackPanel>

            <StackPanel 
                x:Name="LowerMenuItems"
                Orientation="Vertical"
                Grid.Row="2">

                <Grid
                    Margin="0,4"
                    TextElement.FontFamily="{DynamicResource OpenIconic}"
                    TextElement.FontSize="19"
                    Visibility="{Binding ContentViewModel.SupportsViewTypeChange, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Controls:MetroRadioButton
                        x:Name="ListViewButton"
                        Grid.Row="0"
                        Grid.Column="0"
                        Height="{StaticResource MenuButtonSize}"
                        IsChecked="{Binding ContentViewModel.ViewType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static MVVM:ViewModelViewType.Normal}, Mode=TwoWay}">
                        <Viewbox
                            x:Name="ListViewIcon">
                            <Path Margin="2" 
                                  Data="{StaticResource iconic-geometry-list-rich}"
                                  Fill="{Binding Path=Foreground, ElementName=ListViewButton, FallbackValue=Red}"/>
                        </Viewbox>
                    </Controls:MetroRadioButton>

                    <Controls:MetroRadioButton
                        x:Name="GridViewButton"
                        Grid.Row="1"
                        Grid.Column="1"
                        Height="{StaticResource MenuButtonSize}"
                        IsChecked="{Binding ContentViewModel.ViewType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static MVVM:ViewModelViewType.Grid}, Mode=TwoWay}">
                        <Viewbox
                            x:Name="GridViewIcon">
                            <Path Margin="2" 
                                  Data="{StaticResource iconic-geometry-grid-two-up}"
                                  Fill="{Binding Path=Foreground, ElementName=GridViewButton, FallbackValue=Red}"/>
                        </Viewbox>
                    </Controls:MetroRadioButton>

                </Grid>

                <Controls:MetroButton
                    x:Name="SettingsButton"
				    Command="{Binding NavigatePagesCommand}"
                    CommandParameter="{Binding PagesSettingsViewModel}"
                    HorizontalContentAlignment="Left"
                    Height="{StaticResource MenuButtonSize}">
                    <StackPanel 
                        Orientation="Horizontal"
                        TextElement.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}">
                        <Viewbox
                            x:Name="SettingsHeaderIcon">
                            <Path Margin="2" 
                                  Data="{StaticResource iconic-geometry-cog}"
                                  Fill="{Binding Path=Foreground, ElementName=SettingsButton, FallbackValue=Red}"/>
                        </Viewbox>
                        <TextBlock
                            x:Name="SettingsHeaderLabel"
                            Text="Settings"
                            Padding="5"
                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=MenuButton}"/>
                    </StackPanel>
                </Controls:MetroButton>

            </StackPanel>
        </Grid>

        <Border
			Grid.Row="1"
			Grid.Column="1"
            BorderBrush="{DynamicResource window-theme-primary}"
            BorderThickness="1,1,0,0">
            <ContentPresenter
			    Content="{Binding ContentViewModel}"/>
        </Border>

        <Grid
			x:Name="Watermark"
			Panel.ZIndex="99"
			Grid.RowSpan="2"
			Grid.ColumnSpan="2"
            TextElement.Foreground="{DynamicResource window-foreground}"
			IsHitTestVisible="False"
			VerticalAlignment="Center"
			HorizontalAlignment="Center">
            <Grid.LayoutTransform>
                <ScaleTransform x:Name="WatermarkScale" ScaleX="1" ScaleY="1"/>
            </Grid.LayoutTransform>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
								Storyboard.TargetName="Watermark"
								Storyboard.TargetProperty="Opacity"
								BeginTime="0:0:2"
								Duration="0:0:4"
								From="1" To="0"/>
                            <DoubleAnimation 
								Storyboard.TargetName="WatermarkScale"
								Storyboard.TargetProperty="ScaleX"
								BeginTime="0:0:2"
								Duration="0:0:4.5"
								From="1" To="0"/>
                            <DoubleAnimation 
								Storyboard.TargetName="WatermarkScale"
								Storyboard.TargetProperty="ScaleY"
								BeginTime="0:0:2"
								Duration="0:0:4.5"
								From="1" To="0"/>
                            <ObjectAnimationUsingKeyFrames 
								Storyboard.TargetName="Watermark"
								Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame
									KeyTime="0:0:6.5"
									Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
            <Border
                BorderThickness="3"
                BorderBrush="{DynamicResource window-theme-primary}"
                Background="{DynamicResource window-background}">
                <Grid>
                    <TextBlock 
                        Text="{DynamicResource ProjectURL}" 
                        FontSize="16" FontWeight="Bold"
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"/>
                    <TextBlock 
                        Text="{DynamicResource AppTitle}" 
                        FontSize="50" FontWeight="Normal"
                        Margin="0,3,0,3"/>
                    <TextBlock 
                        Text="{Binding Version, Source={x:Static AssemblyInformation:AssemblyInformation.Instance}, StringFormat=v{0}}" 
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        FontSize="12" FontWeight="Bold"/>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Windows:ThemedWindow>
